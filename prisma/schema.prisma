generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model paciente {
  id                  Int      @id @default(autoincrement())
  nome                String
  cpf                 String   @unique(map: "Paciente_cpf_key")
  data_nascimento     DateTime
  idade               Int
  genero              String
  estado_civil        String
  telefone            String
  endereco            String
  bairro              String
  cidade              String
  estado              String
  cep                 String
  nome_emergencia     String
  telefone_emergencia String
  endereco_emergencia String
  medicoResponsavelId Int?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  agendamentos   agendamento[]
  prescricoes     prescricao[]
  medicoResponsavel user? @relation("Paciente_MedicoResponsavel", fields: [medicoResponsavelId], references: [id])

  @@index([medicoResponsavelId], map: "idx_paciente_medicoResponsavelId")
}

model user {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique(map: "User_email_key")
  password String
  setor    String?
  tipo     String  @db.VarChar(30)

  pacientes       paciente[] @relation("Paciente_MedicoResponsavel")
  agendamentos    agendamento[] @relation("Agendamento_MedicoResponsavel")
  prescricoes     prescricao[] @relation("Prescricao_MedicoResponsavel")
}

model department {
  id   Int    @id @default(autoincrement())
  name String
  head String
}

model rooms {
  id          Int    @id @default(autoincrement())
  room_name   String
  room_number Int
  room_beds   Int
  department  String
}

model professional {
  id         Int    @id @default(autoincrement())
  name       String
  email      String
  telephone  String
  password   String
  department String
}

model agendamento {
  id                  Int       @id @default(autoincrement())
  pacienteId          Int
  medicoResponsavelId Int?
  observacao          String?   @db.VarChar(255)
  dataConsulta        DateTime  @db.DateTime(0)
  horaConsulta        DateTime? @db.Time(0)
  createdAt           DateTime? @default(now()) @db.DateTime(0)
  finalizado Boolean @default(false)


  paciente           paciente @relation(fields: [pacienteId], references: [id])
  medicoResponsavel  user?    @relation("Agendamento_MedicoResponsavel", fields: [medicoResponsavelId], references: [id])


  @@index([pacienteId], map: "idx_agendamento_pacienteId")
  @@index([medicoResponsavelId], map: "idx_agendamento_medicoResponsavelId")
}

model prescricao {
  id                  Int      @id @default(autoincrement())
  pacienteId          Int
  medicoResponsavelId Int
  sintomas          String   @db.VarChar(400)
  observacao          String   @db.VarChar(400)
  prescricao          String   @db.VarChar(400)
  dataConsulta        DateTime @db.DateTime(0)
  horaConsulta        DateTime? @db.Time(0)

  paciente           paciente @relation(fields: [pacienteId], references: [id])
  medicoResponsavel  user     @relation("Prescricao_MedicoResponsavel", fields: [medicoResponsavelId], references: [id])

  @@index([pacienteId], map: "idx_prescricao_pacienteId")
  @@index([medicoResponsavelId], map: "idx_prescricao_medicoResponsavelId")
}
