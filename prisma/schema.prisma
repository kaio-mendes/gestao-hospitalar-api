generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model agendamento {
  id                  Int       @id @default(autoincrement())
  pacienteId          Int
  paciente            paciente  @relation(fields: [pacienteId], references: [id], name: "PacienteAgendamentos", map: "fk_agendamento_paciente")
  medicoResponsavelId Int?
  medicoResponsavel   user?     @relation(fields: [medicoResponsavelId], references: [id], name: "MedicoAgendamentos", map: "fk_agendamento_medico")
  observacao          String?   @db.VarChar(255)
  dataConsulta        DateTime  @db.DateTime(0)
  createdAt           DateTime? @default(now()) @db.DateTime(0)

  @@index([pacienteId], map: "idx_agendamento_pacienteId")
  @@index([medicoResponsavelId], map: "idx_agendamento_medicoResponsavelId")
}

model paciente {
  id                  Int          @id @default(autoincrement())
  nome                String
  cpf                 String       @unique(map: "Paciente_cpf_key")
  data_nascimento     DateTime
  idade               Int
  genero              String
  estado_civil        String
  telefone            String
  endereco            String
  bairro              String
  cidade              String
  estado              String
  cep                 String
  nome_emergencia     String
  telefone_emergencia String
  endereco_emergencia String
  medicoResponsavelId Int?
  medicoResponsavel   user?        @relation(fields: [medicoResponsavelId], references: [id], name: "PacienteMedico", map: "fk_paciente_medico")
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt

  agendamentos        agendamento[] @relation("PacienteAgendamentos")
  
  @@index([medicoResponsavelId], map: "idx_paciente_medicoResponsavelId")
}

model user {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique(map: "User_email_key")
  password   String
  setor      String?
  tipo       String     @db.VarChar(30)

  pacientes  paciente[] @relation("PacienteMedico")
  agendamentos agendamento[] @relation("MedicoAgendamentos")
}

model department {
  id   Int    @id @default(autoincrement())
  name String
  head String
}

model rooms {
  id          Int    @id @default(autoincrement())
  room_name   String
  room_number Int
  room_beds   Int
  department  String
}

model professional {
  id         Int    @id @default(autoincrement())
  name       String
  email      String
  telephone  String
  password   String
  department String
}
